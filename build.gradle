plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.jlink' version '2.24.1'
    id 'checkstyle'
}

group 'io.rpg'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "JFrogBintray"
        url = "https://kkafara.jfrog.io/artifactory/kkafara-gradle-release-local/"
    }
}

ext {
    junitVersion = '5.8.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

checkstyle {
    configFile = file('config/checkstyle/checkstyle.xml')
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'io.rpg'
    mainClass = 'io.rpg.Main'
}

javafx {
    version = '17.0.2'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web']
}

dependencies {
    implementation('org.controlsfx:controlsfx:11.1.1')
    implementation('com.dlsc.formsfx:formsfx-core:11.5.0') {
        exclude(group: 'org.openjfx')
    }
    implementation('org.kordamp.ikonli:ikonli-javafx:12.3.1')
    implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')

    implementation('com.google.code.gson:gson:2.9.0')

    implementation('org.jetbrains:annotations:23.0.0')

    implementation('org.apache.logging.log4j:log4j-api:2.17.2')
    implementation('org.apache.logging.log4j:log4j-core:2.17.2')

    implementation('commons-io:commons-io:2.11.0')

    implementation("com.kkafara.rt:result-type:1.0.3")

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-params:${junitVersion}")
    testImplementation("org.mockito:mockito-core:4.5.1")
}

test {
    useJUnitPlatform()
}

compileJava {
    options.compilerArgs += ["--add-exports=javafx.graphics/com.sun.javafx.scene=io.rpg"]
}

run {
    jvmArgs = ['--add-exports=javafx.graphics/com.sun.javafx.scene=io.rpg']
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
    forceMerge('log4j-api')
}

jlinkZip {
    group = 'distribution'
}
